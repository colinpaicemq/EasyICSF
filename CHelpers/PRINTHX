#ifndef PRINTHEX_INCLUDE
#define PRINTHEX_INCLUDE
#define ASCII_STRING \
                "................" \
                "................" \
                " !\"#½%&'()*+,-./" \
                "0123456789:;<=>?" \
                "@ABCDEFGHIJKLMNO" \
                "PQRSTUVWXYZ[\\][_" \
            "'abcdefghijklmno" \
            "pqrstuvwxyz{ }~." \
            "................" \
            "................" \
            "................" \
            "................" \
            "................" \
            "................"
const char ascii_tab[256] = ASCII_STRING ;
      char other_tab[256];
void printHex(FILE * pFile,void *buff, int length)
{
  char sepchars[2] = {' ',' '};
  int  i, j;
  unsigned char *pbuff = (unsigned char*)buff;
  long bytesleft;
  char printchar;
  for( i=0; i<length; i+=16, pbuff+=16 )
  {
    if( (bytesleft=length-i) >= 16 )
            bytesleft=16;
    /**********************************************************
     * First print a row of hex chars.
     **********************************************************/
    fprintf(pFile,"%8.8X :",i);
    for( j=0; j<bytesleft; j++ ) {
            if(j % 4 == 0) fprintf(pFile," %2.2X",*(pbuff+j));
            else fprintf(pFile,"%2.2X",*(pbuff+j));
    }
    /**********************************************************
    * This pads the hex display with blanks if this is the
    * last row and it's less than 16 bytes long.
    **********************************************************/
    for( j=bytesleft; j<16; j++ ) {
            if(j % 4 == 0) fprintf(pFile,"   ");
            else fprintf(pFile,"  ");
    }
    /***********************************************************
     * Next print the characters themselves (if they're
     * printable).
     ********************************************************/
  fprintf(pFile," %c", sepchars[0]);
  for( j=0; j<bytesleft; j++ ) {
          printchar = isprint(*(pbuff+j)) ? *(pbuff+j) : '.';
          fprintf(pFile,"%c",printchar);
  }
  /**********************************************************
   * ..and pad the last row with blanks if necessary.
   **********************************************************/
  for( j=bytesleft; j<16; j++ ) fprintf(pFile," ");
  fprintf(pFile,"%c",sepchars[1]);
  for( j=0; j<bytesleft; j++ ) {
          fprintf(pFile,"%c", ascii_tab[*(pbuff+j)]);
  }
  /**********************************************************
   * ..and pad the last row with blanks if necessary.
   **********************************************************/
  for( j=bytesleft; j<16; j++ ) fprintf(pFile," ");
  fprintf(pFile,"%c\n",sepchars[1]);
  }
  return;
}
#endif
