
int GENPKISKEL(
  char * pPrivate,
  char **  pData,
  int  * lData)
{
  int rc;
  int rs;
  int zero = 0;
  int rule_count                 =  1;
  // key type AES and used for OP (on this system
  char8 rule[2]  = {"RSA-CRT "
                   ,"KEY-AES "};
  char * pRule = & rule[0][0];
  short key_value_CRT[18] = {0};
  key_value_CRT[0]        = 0x0480;
  int lKey_value_CRT = sizeof(key_value_CRT);

//printHex(stdout,&key_value_CRT[0],lKey_value_CRT);

  int i64 = 64;
  int lOutput = 6500;
  char * pOutput;
  pOutput = (char *) malloc(lOutput);
  if ( pOutput == 0)
  {
     printf("CSNDPKB malloc failed\n");
     return 8;
  }
  CSNDPKB(
          &rc  ,                   /* return code         */
          &rs  ,                   /* reason code         */
          &zero,                   /* exit data length   0*/
          0,                       /* exit data[]        0*/

          &rule_count,             /* rule array count    ! */
          pRule,                   /* rule array[]        ! */

         &lKey_value_CRT,
 (char *) &key_value_CRT,
 // following for storing in the key
 //       &i64,                    /* Len private           */
          &zero,                   /* Len private           */
          pPrivate,                /* private             ! */
#ifdef no
          &zero, //L' user definableL
          0,                       // p KEK

          &zero,  // key derivation dl
          0,        // user definable data
#endif
          &zero,                    /* reserved1             */
          0,                        /*                       */
          &zero,                    /* reserved2             */
          0,                        /*                       */
          &zero,                    /* reserved3             */
          0,                        /*                       */
          &zero,                    /* reserved4             */
          0,                        /*                       */
          &zero,                    /* reserved5             */
          0,                        /*                       */
          &lOutput,
          pOutput
  );           /* output key id2[]      !  */
  printf("SKELPKI CSNDPKB  rc %i rs %i %s\n",rc,rs,csfgetrc(rs));
  if ( rc > 0)
  {
    return rc;
  }
  free(*pData);
  *pData = pOutput;
  * lData = lOutput;
// lData = l   ;
//* pData
  return rc;
}
