#ifndef DELETE_INCLUDE
#define DELETE_INCLUDE
#ifdef delete
//
//  routines to delete from a key store
//  use deleteCKDS(label) and deletePKDS(label)
//
int doDelete2(char * which, char * label )
{
 int rc = 0;
 int rs = 0;
 int zero = 0;
 int rule_count   =        1;
 char  rule[8] ={"LABEL-DL"};

 printf("Deleting label %s.\n",label );
 do64(Lab,label);
 if (which[0] == 'C' ) // CKDS
 {
   CSNBKRD (
          &rc,                       /* return code                   */
          &rs,                       /* reason code                   */
          &zero,                     /* exit data length              */
          0,                         /* exit data[]                   */
          &rule_count,               /* rule array count              */
          &rule[0],                  /* rule array[]                  */
         pLab              );        /* key label[64]                 */

  if (rc == 8 && rs == 10012)   // not found
      rc = 0;                 // is ok
  if (rc != 0
     )
  {
    printf("CSNBKRD rc %i rs %i\n",rc,rs);
  }
  return rc;
  }
 else
 if (which[0] == 'P' ) // PKDS
 {
   CSNDKRD (
          &rc,                       /* return code                   */
          &rs,                       /* reason code                   */
          &zero,                     /* exit data length              */
          0,                         /* exit data[]                   */
          &rule_count,               /* rule array count              */
          &rule[0],                  /* rule array[]                  */
         pLab              );        /* key label[64]                 */

  if (rc == 8 && rs == 10012)   // not found
      rc = 0;                 // is ok
  if (rc != 0
     )
  {
    printf("CSNDKRD rc %i rs %i\n",rc,rs);
  }
  return rc;
  }
  else
  {
    printf("Invalid type passed to Delete %s\n",which );
    return 8;
  }
}
#endif
//
//
//
int deleteCKDS( char * label )
{
 int rc = 0;
 int rs = 0;
 int zero = 0;
 int rule_count   =        1;
 char  rule[8] ={"LABEL-DL"};

//printf("Deleting label %s.\n",label );
 do64(Lab,label);
 CSNBKRD (
          &rc,                       /* return code                   */
          &rs,                       /* reason code                   */
          &zero,                     /* exit data length              */
          0,                         /* exit data[]                   */
          &rule_count,               /* rule array count              */
          &rule[0],                  /* rule array[]                  */
         pLab              );        /* key label[64]                 */

  if (rc == 8 && rs == 10012)   // not found
      rc = 0;                 // is ok
  if (rc != 0  )
  {
    printf("delete CKDS CSNBKRD %s rc %i rs %i\n",label,rc,rs);
  }
  return rc;
}
//
//
//
int deletePKDS( char * label )
{
 int rc;
 int rc = 0;
 int rs = 0;
 int zero = 0;
 int rule_count   =        1;
 char  rule[8] ={"LABEL-DL"};

//  printf("Deleting label %s.\n",label );
 do64(Lab,label);
   CSNDKRD (
          &rc,                       /* return code                   */
          &rs,                       /* reason code                   */
          &zero,                     /* exit data length              */
          0,                         /* exit data[]                   */
          &rule_count,               /* rule array count              */
          &rule[0],                  /* rule array[]                  */
         pLab              );        /* key label[64]                 */

  if (rc == 8 && rs == 10012)   // not found
      rc = 0;                 // is ok
  if (rc != 0 )
  {
    printf("deletePKDS CSNDKRD rc %i rs %i\n",rc,rs);
  }
  return rc;
  }
}
#endif
