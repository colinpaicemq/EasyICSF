
#ifndef KEYPKI_INCLUDE
#define KEYPKI_INCLUDE
int GENPKIGEN(
  char **  pData,
  int  * lData)
{
  int rc;
  int rs;
  int zero = 0;
  int lOutput=  6500;
  char * pOutput;
  pOutput = (char * ) malloc(lOutput);
  char nullTransportKey[64];
  memset(&nullTransportKey[0],0,64);
  //?key type AES and used for OP (on this system
  int rule_count                 =  1;
  char8 rule[2]  = {"MASTER  " };
  //               ,"KEY-AES "};
  char * pRule = & rule[0][0];
  char * pRegen = "ColinsRegen";
  int    lRegen = strlen(pRegen);
         lRegen = 0;
  int ll = *lData;
  CSNDPKG(
          &rc  ,                   /* return code         */
          &rs  ,                   /* reason code         */
          &zero,                   /* exit data length   0*/
          0,                       /* exit data[]        0*/

          &rule_count,             /* rule array count    ! */
          pRule,                   /* rule array[]        ! */

          &lRegen,                 /* L regen string        */
          pRegen,                  /* private             ! */

         &ll,                      // length of skeleton
         *pData,                   // the skeleton

         &nullTransportKey[0],    /*                       */

         &lOutput,
         pOutput
  );           /* output key id2[]      !  */
//if ( rc > 0)
  {
    printf("KEYPKI:CSNDPKG rc %i rs %i %s\n",
    rc,rs,csfgetrc(rs));
    return rc;
  }
  free(*pData);
  *pData = pOutput;
  * lData = lOutput;
  return rc;
}
#endif
