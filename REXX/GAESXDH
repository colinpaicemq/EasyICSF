/* Rexx */
/*********************************************************************/
/* High level rexx to generate an AES key using DH                   */
/*********************************************************************/
signal on novalue
parse source . .  me .
parse upper arg   . "-KEY" label .
parse upper arg   . "-PRIVATE"  private .
parse upper arg   . "-PUBLIC"  public .
parse upper arg   . "-TYPE" type .
parse upper arg  args
say args
trace e
syntax = "syntax is  -KEY key  -PRIVATE label -PUBLIC label"||,
         " -TYPE I|E|C <-REPLACE>"
if ( label =  ""| private  = "" |public = "" ) then
do
   say syntax
   return 8
end
if (type = '' | pos(substr(type,1,1),"IEC") = 0) then
do
   say syntax
   return 8
end
if ( wordpos("-REPLACE",args) > 0) then replace="Y"
else replace="NO"
parse upper arg   . "-KEY" label .

trace e
if ( label =  "" |,
     private = "",
     public  = "") then
do
   say syntax
   return 8
end
rc = existspk(private)
if ( rc <> 0) then
do
  say me private "private key not found in the PKDS"
  return 8
end
rc = existspk(public)
if ( rc <> 0) then
do
  say me public " public  key not found in the PKDS"
end
/*********************************************************************/
/* Generate an AES using a skeleton                                  */
/*********************************************************************/
rc = SKELAESE(type)
parse var rc myrc myrs  Key
if myrc <> 0 then return myrc
say me "SKELAESE" myrc myrs  cprs(myrc,myrs)
/*********************************************************************/
/* Generate the key. Pass the skeleton to the create routine         */
/*********************************************************************/
rc= GENDH(private,public,Key)
parse var rc myrc myrs Data
if myrc <> 0 then return myrc
say me "GENDH" myrc myrs  cprs(myrc,myrs)
/*********************************************************************/
/* Add it to the CKDS                                                */
/*********************************************************************/
rc = addckds(label,Data,replace)
return 0
