#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <string.h>
#include </usr/include/csfbext.h>
typedef char    char8[8];
#include <csfgetrc.h>  // colin special
#include <printhx.h>  // colin special
#include <do64.h>  // colin special
#include <args2.h>  // colin special
#include <addpkds.h>  // colin special
#include <SKELPKI.h> // colin special
#include <KEYPKI.h> // colin special
#include <exists.h>  // colin special
//nclude <SKELPKI.h>  // colin special
int main( int argc, char *argv??(??))
{
  char * pKey   = "";
  char * pReplace = "";
  int rc = 0;
  rc += readArgs( argc,argv,"-key",0,&pKey,"v");
  rc += readArgs( argc,argv,"-replace",0,&pReplace,"v");
  if (rc > 0 )
  {
     printf("Problem with parameters %i\n",rc);
     return 8;
  }
  if ( pKey[0] == 0  ) {rc++;printf("-key ...  is required\n");}
  if ( rc > 0) return rc;

  if ( strlen(pReplace) > 0  &&
       ( pReplace[0]=='y'  ||  pReplace[0]=='Y')
     ) pReplace = "Y";
  else pReplace = "N";
  // build skeleton
  char * pData;
  int lData;
  rc = GENPKISKEL(pKey    ,&pData, &lData);
  if (rc != 0) return rc;
  rc = GENPKIGEN(&pData, &lData);
  if (rc != 0) return rc;

  rc = addPKDS( pKey,pData,lData,pReplace);
  if (rc != 0) return rc;
   return rc;
}
