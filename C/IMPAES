#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <string.h>
#include <printhx.h> // colin special
#include <csfgetrc.h>   // colin special
#include <read.h>  // colin special
typedef char    char8[8];
#include <args2.h>  // colin special
#include <impaesh.h>  // colin special
// #include <IMPCIP.h>  // colin special
#include <do64.h> // colin special
#include <addckds.h> // colin special
#include <exists.h>     // colin special
#include </usr/include/csfbext.h>
// int doImportAES (char * pKey, char * pDecryptKey,
// char  ** pData, int * lData);
int main( int argc, char *argv??(??))
{
  int i;
  char * pKey   = "";
  char * pReplace = "";
  char * pPrivate= "";
  char * pType   = "";
  char * dd     = "";
  int rc = 0;
  rc += readArgs( argc,argv,"-key",0 ,&pKey,"v");
  rc += readArgs( argc,argv,"-replace",0 ,&pReplace,"v");
  rc += readArgs( argc,argv,"-private",0 ,&pPrivate,"v");
  rc += readArgs( argc,argv,"-type",0 ,&pType,"v");
  rc += readArgs( argc,argv,"-dd"    ,64,&dd    ,"v");
  if (rc > 0 )
  {
     printf("Problem with parameters %i\n",rc);
     return 8;
  }
  if ( pKey[0] == ' ') {rc++;printf("-key ...  is required\n");}
  if ( pPrivate[0]== ' ') {rc++;printf("-private ... is required\n");}
  if ( rc > 0) return rc;
  if ( strlen(pReplace) > 0  &&
      ( pReplace[0]=='y'  ||  pReplace[0]=='Y')
    ) pReplace = "Y";
  else pReplace = "N";
  int lData;
  char * pData;

  rc=  read(dd,&pData,&lData);         // returns a buffer
//printf("read rc %i data length %i\n",rc,lData );
  if ( rc != 0) return 8;

  rc = doImportAES(pKey,pPrivate,pType,&pData,&lData);
  if ( rc != 0) return 8;
//printHex(stdout,pData,lData);

  rc = addCKDS(pKey,pData,lData,pReplace);
  if ( rc != 0 ) return rc;
  return 0;
}
