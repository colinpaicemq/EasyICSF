 typedef struct defs
 {
    int   value;
    char * name;
 } defs;
/* The following classes of objects are defined: */
#define DEFEND(a) \
  {0,0}};
#define DEFSTART(a) \
  defs    a[]=  {
#define DEF2(a,b) \
  {a,#a},

DEFSTART(TRUEFALSE)
DEF2(  FALSE                  ,0x00000000                  )
DEF2(  TRUE                   ,0x00000001                  )
DEFEND(TRUEFALSE)

DEFSTART(CKO)

DEF2( CKO_DATA                ,0x00000000                  )
DEF2( CKO_CERTIFICATE         ,0x00000001                  )
DEF2( CKO_PUBLIC_KEY          ,0x00000002                  )
DEF2( CKO_PRIVATE_KEY         ,0x00000003                  )
DEF2( CKO_SECRET_KEY          ,0x00000004                  )
DEF2( CKO_HW_FEATURE          ,0x00000005                  )
DEF2( CKO_DOMAIN_PARAMETERS   ,0x00000006                  )
DEF2( CKO_MECHANISM           ,0x00000007                  )
DEF2( CKO_OTP_KEY             ,0x00000008                  )

DEF2( CKO_VENDOR_DEFINED      ,0x80000000                  )
DEFEND(CKO)
/* CK_HW_FEATURE_TYPE is a
 * value that identifies the hardware feature type of an object
 * with CK_OBJECT_CLASS equal to CKO_HW_FEATURE. */

/* The following hardware feature types are defined */
DEFSTART(CKH)
DEF2( CKH_MONOTONIC_COUNTER    ,0x00000001                 )
DEF2( CKH_CLOCK                ,0x00000002                 )
DEF2( CKH_USER_INTERFACE       ,0x00000003                 )
DEF2( CKH_VENDOR_DEFINED       ,0x80000000                 )
DEFEND(CKH)


/* the following key types are defined: */
DEFSTART(CKK)
DEF2( CKK_RSA               ,0x00000000                    )
DEF2( CKK_DSA               ,0x00000001                    )
DEF2( CKK_DH                ,0x00000002                    )
/* CKK_ECDSA is deprecated in v2.11, CKK_EC is preferred. */
DEF2( CKK_ECDSA             ,0x00000003                    )
DEF2( CKK_EC                ,0x00000003                    )
DEF2( CKK_X9_42_DH          ,0x00000004                    )
DEF2( CKK_KEA               ,0x00000005                    )
DEF2( CKK_GENERIC_SECRET    ,0x00000010                    )
DEF2( CKK_RC2               ,0x00000011                    )
DEF2( CKK_RC4               ,0x00000012                    )
DEF2( CKK_DES               ,0x00000013                    )
DEF2( CKK_DES2              ,0x00000014                    )
DEF2( CKK_DES3              ,0x00000015                    )
DEF2( CKK_CAST              ,0x00000016                    )
DEF2( CKK_CAST3             ,0x00000017                    )
/* CKK_CAST5 is deprecated in v2.11, CKK_CAST128 is preferred. */
DEF2( CKK_CAST5             ,0x00000018                    )
DEF2( CKK_CAST128           ,0x00000018                    )
DEF2( CKK_RC5               ,0x00000019                    )
DEF2( CKK_IDEA              ,0x0000001A                    )
DEF2( CKK_SKIPJACK          ,0x0000001B                    )
DEF2( CKK_BATON             ,0x0000001C                    )
DEF2( CKK_JUNIPER           ,0x0000001D                    )
DEF2( CKK_CDMF              ,0x0000001E                    )
DEF2( CKK_AES               ,0x0000001F                    )
DEF2( CKK_BLOWFISH          ,0x00000020                    )
DEF2( CKK_TWOFISH           ,0x00000021                    )
DEF2( CKK_SECURID           ,0x00000022                    )
DEF2( CKK_HOTP              ,0x00000023                    )
DEF2( CKK_ACTI              ,0x00000024                    )
DEF2( CKK_CAMELLIA          ,0x00000025                    )
DEF2( CKK_ARIA              ,0x00000026                    )
DEF2( CKK_MD5_HMAC          ,0x00000027                    )
DEF2( CKK_SHA_1_HMAC        ,0x00000028                    )
DEF2( CKK_RIPEMD128_HMAC    ,0x00000029                    )
DEF2( CKK_RIPEMD160_HMAC    ,0x0000002A                    )
DEF2( CKK_SHA256_HMAC       ,0x0000002B                    )
DEF2( CKK_SHA384_HMAC       ,0x0000002C                    )
DEF2( CKK_SHA512_HMAC       ,0x0000002D                    )
DEF2( CKK_SHA224_HMAC       ,0x0000002E                    )
DEF2( CKK_SEED              ,0x0000002F                    )
DEF2( CKK_GOSTR3410         ,0x00000030                    )
DEF2( CKK_GOSTR3411         ,0x00000031                    )
DEF2( CKK_GOST28147         ,0x00000032                    )
DEF2(  CKK_IBM_SM4          ,                  0x80050001  )
DEF2(  CKK_IBM_SM2          ,                  0x80050002  )
DEF2(  CKK_IBM_CHACHA20     ,                  0x80000033  )
DEF2(  CKK_IBM_DILITHIUM    ,                  0X80010023  )

DEF2( CKK_VENDOR_DEFINED    ,0x80000000                    )
DEFEND(CKK)


/* CK_CERTIFICATE_TYPE is a value that identifies a certificate
 * type */

/* The following certificate types are defined: */
DEFSTART(CKC)
DEF2( CKC_X_509             ,0x00000000                    )
DEF2( CKC_X_509_ATTR_CERT ,0x00000001                      )
DEF2( CKC_WTLS              ,0x00000002                    )
// DEF2( CKC_VENDOR_DEFINED    ,0x80000000                    )
DEFEND(CKC)


/* CK_ATTRIBUTE_TYPE is a value that identifies an attribute
 * type */
// typedef CK_ULONG          CK_ATTRIBUTE_TYPE;

/* The CKF_ARRAY_ATTRIBUTE flag identifies an attribute which
   consists of an array of values. */
// DEF2( CKF_ARRAY_ATTRIBUTE      ,0x40000000                 )
DEFSTART(CK_OTP)
// The following OTP-related defines relate to the CKA_OTP_FORMAT
DEF2( CK_OTP_FORMAT_DECIMAL      , 0                       )
DEF2( CK_OTP_FORMAT_HEXADECIMAL  , 1                       )
DEF2( CK_OTP_FORMAT_ALPHANUMERIC , 2                       )
DEF2( CK_OTP_FORMAT_BINARY       , 3                       )
DEFEND(CK_OTP)
#ifdef no
#endif
// The following OTP-related defines relate to the CKA_OTP_...
//DEF2( CK_OTP_PARAM_IGNORED         0                       )
//DEF2( CK_OTP_PARAM_OPTIONAL        1                       )
//DEF2( CK_OTP_PARAM_MANDATORY       2                       )

/* The following attribute types are defined: */
DEFSTART(CKA   )
DEF2( CKA_CLASS                ,0x00000000                 )
DEF2( CKA_TOKEN                ,0x00000001                 )
DEF2( CKA_PRIVATE              ,0x00000002                 )
DEF2( CKA_LABEL                ,0x00000003                 )
DEF2( CKA_APPLICATION          ,0x00000010                 )
DEF2( CKA_VALUE                ,0x00000011                 )
DEF2( CKA_OBJECT_ID            ,0x00000012                 )
DEF2( CKA_CERTIFICATE_TYPE     ,0x00000080                 )
DEF2( CKA_ISSUER               ,0x00000081                 )
DEF2( CKA_SERIAL_NUMBER        ,0x00000082                 )
DEF2( CKA_AC_ISSUER            ,0x00000083                 )
DEF2( CKA_OWNER                ,0x00000084                 )
DEF2( CKA_ATTR_TYPES           ,0x00000085                 )
DEF2( CKA_TRUSTED              ,0x00000086                 )
DEF2( CKA_CERTIFICATE_CATEGORY          ,0x00000087        )
DEF2( CKA_JAVA_MIDP_SECURITY_DOMAIN     ,0x00000088        )
DEF2( CKA_URL                           ,0x00000089        )
DEF2( CKA_HASH_OF_SUBJECT_PUBLIC_KEY    ,0x0000008A        )
DEF2( CKA_HASH_OF_ISSUER_PUBLIC_KEY     ,0x0000008B        )
DEF2( CKA_NAME_HASH_ALGORITHM           ,0x0000008C        )
DEF2( CKA_CHECK_VALUE                   ,0x00000090        )

DEF2( CKA_KEY_TYPE             ,0x00000100                 )
DEF2( CKA_SUBJECT              ,0x00000101                 )
DEF2( CKA_ID                   ,0x00000102                 )
DEF2( CKA_SENSITIVE            ,0x00000103                 )
DEF2( CKA_ENCRYPT              ,0x00000104                 )
DEF2( CKA_DECRYPT              ,0x00000105                 )
DEF2( CKA_WRAP                 ,0x00000106                 )
DEF2( CKA_UNWRAP               ,0x00000107                 )
DEF2( CKA_SIGN                 ,0x00000108                 )
DEF2( CKA_SIGN_RECOVER         ,0x00000109                 )
DEF2( CKA_VERIFY               ,0x0000010A                 )
DEF2( CKA_VERIFY_RECOVER       ,0x0000010B                 )
DEF2( CKA_DERIVE               ,0x0000010C                 )
DEF2( CKA_START_DATE           ,0x00000110                 )
DEF2( CKA_END_DATE             ,0x00000111                 )
DEF2( CKA_MODULUS              ,0x00000120                 )
DEF2( CKA_MODULUS_BITS         ,0x00000121                 )
DEF2( CKA_PUBLIC_EXPONENT      ,0x00000122                 )
DEF2( CKA_PRIVATE_EXPONENT     ,0x00000123                 )
DEF2( CKA_PRIME_1              ,0x00000124                 )
DEF2( CKA_PRIME_2              ,0x00000125                 )
DEF2( CKA_EXPONENT_1           ,0x00000126                 )
DEF2( CKA_EXPONENT_2           ,0x00000127                 )
DEF2( CKA_COEFFICIENT          ,0x00000128                 )
DEF2( CKA_PRIME                ,0x00000130                 )
DEF2( CKA_SUBPRIME             ,0x00000131                 )
DEF2( CKA_BASE                 ,0x00000132                 )

DEF2( CKA_PRIME_BITS           ,0x00000133                 )
DEF2( CKA_SUBPRIME_BITS        ,0x00000134                 )
/* (To retain backwards-compatibility) */
//F( CKA_SUB_PRIME_BITS        CKA_SUBPRIME_BITS           )

DEF2( CKA_VALUE_BITS           ,0x00000160                 )
DEF2( CKA_VALUE_LEN            ,0x00000161                 )
DEF2( CKA_EXTRACTABLE          ,0x00000162                 )
DEF2( CKA_LOCAL                ,0x00000163                 )
DEF2( CKA_NEVER_EXTRACTABLE    ,0x00000164                 )
DEF2( CKA_ALWAYS_SENSITIVE     ,0x00000165                 )
DEF2( CKA_KEY_GEN_MECHANISM    ,0x00000166                 )

DEF2( CKA_MODIFIABLE           ,0x00000170                 )
DEF2( CKA_COPYABLE             ,0x00000171                 )

DEF2( CKA_DESTROYABLE          ,0x00000172                 )

/* CKA_ECDSA_PARAMS is deprecated in v2.11,
 * CKA_EC_PARAMS is preferred. */
DEF2( CKA_ECDSA_PARAMS         ,0x00000180                 )
DEF2( CKA_EC_PARAMS            ,0x00000180                 )

DEF2( CKA_EC_POINT             ,0x00000181                 )

/* CKA_SECONDARY_AUTH, CKA_AUTH_PIN_FLAGS,
 * are new for v2.10. Deprecated in v2.11 and onwards. */
DEF2( CKA_SECONDARY_AUTH       ,0x00000200                 )
DEF2( CKA_AUTH_PIN_FLAGS       ,0x00000201                 )

DEF2( CKA_ALWAYS_AUTHENTICATE    ,0x00000202               )

DEF2( CKA_WRAP_WITH_TRUSTED      ,0x00000210               )
//F2( CKA_WRAP_TEMPLATE          (CKF_ARRAY_ATTRIBUTE|,0x00000211)
//F2( CKA_UNWRAP_TEMPLATE        (CKF_ARRAY_ATTRIBUTE|,0x00000212)
//F2( CKA_DERIVE_TEMPLATE        (CKF_ARRAY_ATTRIBUTE|,0x00000213)

DEF2( CKA_OTP_FORMAT                  ,0x00000220          )
DEF2( CKA_OTP_LENGTH                  ,0x00000221          )
DEF2( CKA_OTP_TIME_INTERVAL           ,0x00000222          )
DEF2( CKA_OTP_USER_FRIENDLY_MODE      ,0x00000223          )
DEF2( CKA_OTP_CHALLENGE_REQUIREMENT   ,0x00000224          )
DEF2( CKA_OTP_TIME_REQUIREMENT        ,0x00000225          )
DEF2( CKA_OTP_COUNTER_REQUIREMENT     ,0x00000226          )
DEF2( CKA_OTP_PIN_REQUIREMENT         ,0x00000227          )
DEF2( CKA_OTP_COUNTER                 ,0x0000022E          )
DEF2( CKA_OTP_TIME                    ,0x0000022F          )
DEF2( CKA_OTP_USER_IDENTIFIER         ,0x0000022A          )
DEF2( CKA_OTP_SERVICE_IDENTIFIER      ,0x0000022B          )
DEF2( CKA_OTP_SERVICE_LOGO            ,0x0000022C          )
DEF2( CKA_OTP_SERVICE_LOGO_TYPE       ,0x0000022D          )

DEF2( CKA_GOSTR3410_PARAMS             ,0x00000250         )
DEF2( CKA_GOSTR3411_PARAMS             ,0x00000251         )
DEF2( CKA_GOST28147_PARAMS             ,0x00000252         )

DEF2( CKA_HW_FEATURE_TYPE      ,0x00000300                 )
DEF2( CKA_RESET_ON_INIT        ,0x00000301                 )
DEF2( CKA_HAS_RESET            ,0x00000302                 )

DEF2( CKA_PIXEL_X                       ,0x00000400        )
DEF2( CKA_PIXEL_Y                       ,0x00000401        )
DEF2( CKA_RESOLUTION                    ,0x00000402        )
DEF2( CKA_CHAR_ROWS                     ,0x00000403        )
DEF2( CKA_CHAR_COLUMNS                  ,0x00000404        )
DEF2( CKA_COLOR                         ,0x00000405        )
DEF2( CKA_BITS_PER_PIXEL                ,0x00000406        )
DEF2( CKA_CHAR_SETS                     ,0x00000480        )
DEF2( CKA_ENCODING_METHODS              ,0x00000481        )
DEF2( CKA_MIME_TYPES                    ,0x00000482        )
DEF2( CKA_MECHANISM_TYPE                ,0x00000500        )
DEF2( CKA_REQUIRED_CMS_ATTRIBUTES       ,0x00000501        )
DEF2( CKA_DEFAULT_CMS_ATTRIBUTES        ,0x00000502        )
DEF2( CKA_SUPPORTED_CMS_ATTRIBUTES      ,0x00000503        )
DEF2( CKA_IBM_DEFAULT                   ,     0x80000002   )
DEF2( CKA_IBM_FIPS140                   ,     0x80000005   )
DEF2( CKA_IBM_SECURE                    ,     0x80000006   )
DEF2( CKA_IBM_CARD_COMPLIANCE           ,     0x80000007   )
DEF2( CK_IBM_FIPS2009                   ,     0x00000001   )
DEF2( CK_IBM_BSI2009                    ,     0x00000002   )
DEF2( CK_IBM_FIPS2011                   ,     0x00000004   )
DEF2( CK_IBM_BSI2011                    ,     0x00000008   )
DEF2( CK_IBM_BSICC2017                  ,     0x00000040   )
DEF2( CK_IBM_COMP_Max                   ,     0x0000004F   )
DEF2( CKA_IBM_ALWAYS_SECURE             ,     0x80000008   )
DEF2( CKA_IBM_ICSF_HANDLE               ,     0x80000009   )
DEF2( CKA_IBM_DILITHIUM_MODE            ,     0x80000010   )
DEF2( CKA_IBM_ATTRBOUND                 ,     0x80010004   )
DEF2( CKA_IBM_REGIONAL                  ,     0x80050000   )
// 2( CKA_ALLOWED_MECHANISMS            (CKF_ARRAY_ATTRIBUTE|,0x00000600)
DEFEND(CKA   )

DEFSTART(CKM   )
DEF2( CKM_RSA_PKCS_KEY_PAIR_GEN              ,0x00000000   )
DEF2( CKM_RSA_PKCS                           ,0x00000001   )
DEF2( CKM_RSA_9796                           ,0x00000002   )
DEF2( CKM_RSA_X_509                          ,0x00000003   )
DEF2( CKM_MD2_RSA_PKCS                       ,0x00000004   )
DEF2( CKM_MD5_RSA_PKCS                       ,0x00000005   )
DEF2( CKM_SHA1_RSA_PKCS                      ,0x00000006   )
DEF2( CKM_RIPEMD128_RSA_PKCS                 ,0x00000007   )
DEF2( CKM_RIPEMD160_RSA_PKCS                 ,0x00000008   )
DEF2( CKM_RSA_PKCS_OAEP                      ,0x00000009   )
DEF2( CKM_RSA_X9_31_KEY_PAIR_GEN             ,0x0000000A   )
DEF2( CKM_RSA_X9_31                          ,0x0000000B   )
DEF2( CKM_SHA1_RSA_X9_31                     ,0x0000000C   )
DEF2( CKM_RSA_PKCS_PSS                       ,0x0000000D   )
DEF2( CKM_SHA1_RSA_PKCS_PSS                  ,0x0000000E   )
DEF2( CKM_DSA_KEY_PAIR_GEN                   ,0x00000010   )
DEF2( CKM_DSA                                ,0x00000011   )
DEF2( CKM_DSA_SHA1                           ,0x00000012   )
DEF2( CKM_DH_PKCS_KEY_PAIR_GEN               ,0x00000020   )
DEF2( CKM_DH_PKCS_DERIVE                     ,0x00000021   )
DEF2( CKM_X9_42_DH_KEY_PAIR_GEN              ,0x00000030   )
DEF2( CKM_X9_42_DH_DERIVE                    ,0x00000031   )
DEF2( CKM_X9_42_DH_HYBRID_DERIVE             ,0x00000032   )
DEF2( CKM_X9_42_MQV_DERIVE                   ,0x00000033   )
DEF2( CKM_SHA256_RSA_PKCS                    ,0x00000040   )
DEF2( CKM_SHA384_RSA_PKCS                    ,0x00000041   )
DEF2( CKM_SHA512_RSA_PKCS                    ,0x00000042   )
DEF2( CKM_SHA256_RSA_PKCS_PSS                ,0x00000043   )
DEF2( CKM_SHA384_RSA_PKCS_PSS                ,0x00000044   )
DEF2( CKM_SHA512_RSA_PKCS_PSS                ,0x00000045   )
DEF2( CKM_RC2_KEY_GEN                        ,0x00000100   )
DEF2( CKM_RC2_ECB                            ,0x00000101   )
DEF2( CKM_RC2_CBC                            ,0x00000102   )
DEF2( CKM_RC2_MAC                            ,0x00000103   )
DEF2( CKM_RC2_MAC_GENERAL                    ,0x00000104   )
DEF2( CKM_RC2_CBC_PAD                        ,0x00000105   )
DEF2( CKM_RC4_KEY_GEN                        ,0x00000110   )
DEF2( CKM_RC4                                ,0x00000111   )
DEF2( CKM_DES_KEY_GEN                        ,0x00000120   )
DEF2( CKM_DES_ECB                            ,0x00000121   )
DEF2( CKM_DES_CBC                            ,0x00000122   )
DEF2( CKM_DES_MAC                            ,0x00000123   )
DEF2( CKM_DES_MAC_GENERAL                    ,0x00000124   )
DEF2( CKM_DES_CBC_PAD                        ,0x00000125   )
DEF2( CKM_DES2_KEY_GEN                       ,0x00000130   )
DEF2( CKM_DES3_KEY_GEN                       ,0x00000131   )
DEF2( CKM_DES3_ECB                           ,0x00000132   )
DEF2( CKM_DES3_CBC                           ,0x00000133   )
DEF2( CKM_DES3_MAC                           ,0x00000134   )
DEF2( CKM_DES3_MAC_GENERAL                   ,0x00000135   )
DEF2( CKM_DES3_CBC_PAD                       ,0x00000136   )
DEF2( CKM_CDMF_KEY_GEN                       ,0x00000140   )
DEF2( CKM_CDMF_ECB                           ,0x00000141   )
DEF2( CKM_CDMF_CBC                           ,0x00000142   )
DEF2( CKM_CDMF_MAC                           ,0x00000143   )
DEF2( CKM_CDMF_MAC_GENERAL                   ,0x00000144   )
DEF2( CKM_CDMF_CBC_PAD                       ,0x00000145   )
DEF2( CKM_DES_OFB64                          ,0x00000150   )
DEF2( CKM_DES_OFB8                           ,0x00000151   )
DEF2( CKM_DES_CFB64                          ,0x00000152   )
DEF2( CKM_DES_CFB8                           ,0x00000153   )
DEF2( CKM_MD2                                ,0x00000200   )
DEF2( CKM_MD2_HMAC                           ,0x00000201   )
DEF2( CKM_MD2_HMAC_GENERAL                   ,0x00000202   )
DEF2( CKM_MD5                                ,0x00000210   )
DEF2( CKM_MD5_HMAC                           ,0x00000211   )
DEF2( CKM_MD5_HMAC_GENERAL                   ,0x00000212   )
DEF2( CKM_SHA_1                              ,0x00000220   )
DEF2( CKM_SHA_1_HMAC                         ,0x00000221   )
DEF2( CKM_SHA_1_HMAC_GENERAL                 ,0x00000222   )
DEF2( CKM_RIPEMD128                          ,0x00000230   )
DEF2( CKM_RIPEMD128_HMAC                     ,0x00000231   )
DEF2( CKM_RIPEMD128_HMAC_GENERAL             ,0x00000232   )
DEF2( CKM_RIPEMD160                          ,0x00000240   )
DEF2( CKM_RIPEMD160_HMAC                     ,0x00000241   )
DEF2( CKM_RIPEMD160_HMAC_GENERAL             ,0x00000242   )
DEF2( CKM_SHA224                             ,0x00000255   )
DEF2( CKM_SHA224_HMAC                        ,0x00000256   )
DEF2( CKM_SHA224_HMAC_GENERAL                ,0x00000257   )
DEF2( CKM_SHA224_RSA_PKCS                    ,0x00000046   )
DEF2( CKM_SHA224_RSA_PKCS_PSS                ,0x00000047   )
DEF2( CKM_SHA224_KEY_DERIVATION              ,0x00000396   )
DEF2( CKM_SHA256                             ,0x00000250   )
DEF2( CKM_SHA256_HMAC                        ,0x00000251   )
DEF2( CKM_SHA256_HMAC_GENERAL                ,0x00000252   )
DEF2( CKM_SHA384                             ,0x00000260   )
DEF2( CKM_SHA384_HMAC                        ,0x00000261   )
DEF2( CKM_SHA384_HMAC_GENERAL                ,0x00000262   )
DEF2( CKM_SHA512                             ,0x00000270   )
DEF2( CKM_SHA512_HMAC                        ,0x00000271   )
DEF2( CKM_SHA512_HMAC_GENERAL                ,0x00000272   )
DEF2( CKM_SECURID_KEY_GEN                    ,0x00000280   )
DEF2( CKM_SECURID                            ,0x00000282   )
DEF2( CKM_HOTP_KEY_GEN                       ,0x00000290   )
DEF2( CKM_HOTP                               ,0x00000291   )
DEF2( CKM_ACTI                               ,0x000002A0   )
DEF2( CKM_ACTI_KEY_GEN                       ,0x000002A1   )
DEF2( CKM_CAST_KEY_GEN                       ,0x00000300   )
DEF2( CKM_CAST_ECB                           ,0x00000301   )
DEF2( CKM_CAST_CBC                           ,0x00000302   )
DEF2( CKM_CAST_MAC                           ,0x00000303   )
DEF2( CKM_CAST_MAC_GENERAL                   ,0x00000304   )
DEF2( CKM_CAST_CBC_PAD                       ,0x00000305   )
DEF2( CKM_CAST3_KEY_GEN                      ,0x00000310   )
DEF2( CKM_CAST3_ECB                          ,0x00000311   )
DEF2( CKM_CAST3_CBC                          ,0x00000312   )
DEF2( CKM_CAST3_MAC                          ,0x00000313   )
DEF2( CKM_CAST3_MAC_GENERAL                  ,0x00000314   )
DEF2( CKM_CAST3_CBC_PAD                      ,0x00000315   )
DEF2( CKM_CAST5_KEY_GEN                      ,0x00000320   )
DEF2( CKM_CAST128_KEY_GEN                    ,0x00000320   )
DEF2( CKM_CAST5_ECB                          ,0x00000321   )
DEF2( CKM_CAST128_ECB                        ,0x00000321   )
DEF2( CKM_CAST5_CBC                          ,0x00000322   )
DEF2( CKM_CAST128_CBC                        ,0x00000322   )
DEF2( CKM_CAST5_MAC                          ,0x00000323   )
DEF2( CKM_CAST128_MAC                        ,0x00000323   )
DEF2( CKM_CAST5_MAC_GENERAL                  ,0x00000324   )
DEF2( CKM_CAST128_MAC_GENERAL                ,0x00000324   )
DEF2( CKM_CAST5_CBC_PAD                      ,0x00000325   )
DEF2( CKM_CAST128_CBC_PAD                    ,0x00000325   )
DEF2( CKM_RC5_KEY_GEN                        ,0x00000330   )
DEF2( CKM_RC5_ECB                            ,0x00000331   )
DEF2( CKM_RC5_CBC                            ,0x00000332   )
DEF2( CKM_RC5_MAC                            ,0x00000333   )
DEF2( CKM_RC5_MAC_GENERAL                    ,0x00000334   )
DEF2( CKM_RC5_CBC_PAD                        ,0x00000335   )
DEF2( CKM_IDEA_KEY_GEN                       ,0x00000340   )
DEF2( CKM_IDEA_ECB                           ,0x00000341   )
DEF2( CKM_IDEA_CBC                           ,0x00000342   )
DEF2( CKM_IDEA_MAC                           ,0x00000343   )
DEF2( CKM_IDEA_MAC_GENERAL                   ,0x00000344   )
DEF2( CKM_IDEA_CBC_PAD                       ,0x00000345   )
DEF2( CKM_GENERIC_SECRET_KEY_GEN             ,0x00000350   )
DEF2( CKM_CONCATENATE_BASE_AND_KEY           ,0x00000360   )
DEF2( CKM_CONCATENATE_BASE_AND_DATA          ,0x00000362   )
DEF2( CKM_CONCATENATE_DATA_AND_BASE          ,0x00000363   )
DEF2( CKM_XOR_BASE_AND_DATA                  ,0x00000364   )
DEF2( CKM_EXTRACT_KEY_FROM_KEY               ,0x00000365   )
DEF2( CKM_SSL3_PRE_MASTER_KEY_GEN            ,0x00000370   )
DEF2( CKM_SSL3_MASTER_KEY_DERIVE             ,0x00000371   )
DEF2( CKM_SSL3_KEY_AND_MAC_DERIVE            ,0x00000372   )
DEF2( CKM_SSL3_MASTER_KEY_DERIVE_DH          ,0x00000373   )
DEF2( CKM_TLS_PRE_MASTER_KEY_GEN             ,0x00000374   )
DEF2( CKM_TLS_MASTER_KEY_DERIVE              ,0x00000375   )
DEF2( CKM_TLS_KEY_AND_MAC_DERIVE             ,0x00000376   )
DEF2( CKM_TLS_MASTER_KEY_DERIVE_DH           ,0x00000377   )
DEF2( CKM_TLS_PRF                            ,0x00000378   )
DEF2( CKM_SSL3_MD5_MAC                       ,0x00000380   )
DEF2( CKM_SSL3_SHA1_MAC                      ,0x00000381   )
DEF2( CKM_MD5_KEY_DERIVATION                 ,0x00000390   )
DEF2( CKM_MD2_KEY_DERIVATION                 ,0x00000391   )
DEF2( CKM_SHA1_KEY_DERIVATION                ,0x00000392   )
DEF2( CKM_SHA256_KEY_DERIVATION              ,0x00000393   )
DEF2( CKM_SHA384_KEY_DERIVATION              ,0x00000394   )
DEF2( CKM_SHA512_KEY_DERIVATION              ,0x00000395   )
DEF2( CKM_PBE_MD2_DES_CBC                    ,0x000003A0   )
DEF2( CKM_PBE_MD5_DES_CBC                    ,0x000003A1   )
DEF2( CKM_PBE_MD5_CAST_CBC                   ,0x000003A2   )
DEF2( CKM_PBE_MD5_CAST3_CBC                  ,0x000003A3   )
DEF2( CKM_PBE_MD5_CAST5_CBC                  ,0x000003A4   )
DEF2( CKM_PBE_MD5_CAST128_CBC                ,0x000003A4   )
DEF2( CKM_PBE_SHA1_CAST5_CBC                 ,0x000003A5   )
DEF2( CKM_PBE_SHA1_CAST128_CBC               ,0x000003A5   )
DEF2( CKM_PBE_SHA1_RC4_128                   ,0x000003A6   )
DEF2( CKM_PBE_SHA1_RC4_40                    ,0x000003A7   )
DEF2( CKM_PBE_SHA1_DES3_EDE_CBC              ,0x000003A8   )
DEF2( CKM_PBE_SHA1_DES2_EDE_CBC              ,0x000003A9   )
DEF2( CKM_PBE_SHA1_RC2_128_CBC               ,0x000003AA   )
DEF2( CKM_PBE_SHA1_RC2_40_CBC                ,0x000003AB   )
DEF2( CKM_PKCS5_PBKD2                        ,0x000003B0   )
DEF2( CKM_PBA_SHA1_WITH_SHA1_HMAC            ,0x000003C0   )
DEF2( CKM_WTLS_PRE_MASTER_KEY_GEN            ,0x000003D0   )
DEF2( CKM_WTLS_MASTER_KEY_DERIVE             ,0x000003D1   )
DEF2( CKM_WTLS_MASTER_KEY_DERVIE_DH_ECC      ,0x000003D2   )
DEF2( CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC      ,0x000003D2   )
DEF2( CKM_WTLS_PRF                           ,0x000003D3   )
DEF2( CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE     ,0x000003D4   )
DEF2( CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE     ,0x000003D5   )
DEF2( CKM_KEY_WRAP_LYNKS                     ,0x00000400   )
DEF2( CKM_KEY_WRAP_SET_OAEP                  ,0x00000401   )
DEF2( CKM_CMS_SIG                            ,0x00000500   )
DEF2( CKM_KIP_DERIVE                         ,0x00000510   )
DEF2( CKM_KIP_WRAP                           ,0x00000511   )
DEF2( CKM_KIP_MAC                            ,0x00000512   )
DEF2( CKM_CAMELLIA_KEY_GEN                   ,0x00000550   )
DEF2( CKM_CAMELLIA_ECB                       ,0x00000551   )
DEF2( CKM_CAMELLIA_CBC                       ,0x00000552   )
DEF2( CKM_CAMELLIA_MAC                       ,0x00000553   )
DEF2( CKM_CAMELLIA_MAC_GENERAL               ,0x00000554   )
DEF2( CKM_CAMELLIA_CBC_PAD                   ,0x00000555   )
DEF2( CKM_CAMELLIA_ECB_ENCRYPT_DATA          ,0x00000556   )
DEF2( CKM_CAMELLIA_CBC_ENCRYPT_DATA          ,0x00000557   )
DEF2( CKM_CAMELLIA_CTR                       ,0x00000558   )
DEF2( CKM_ARIA_KEY_GEN                       ,0x00000560   )
DEF2( CKM_ARIA_ECB                           ,0x00000561   )
DEF2( CKM_ARIA_CBC                           ,0x00000562   )
DEF2( CKM_ARIA_MAC                           ,0x00000563   )
DEF2( CKM_ARIA_MAC_GENERAL                   ,0x00000564   )
DEF2( CKM_ARIA_CBC_PAD                       ,0x00000565   )
DEF2( CKM_ARIA_ECB_ENCRYPT_DATA              ,0x00000566   )
DEF2( CKM_ARIA_CBC_ENCRYPT_DATA              ,0x00000567   )
DEF2( CKM_SKIPJACK_KEY_GEN                   ,0x00001000   )
DEF2( CKM_SKIPJACK_ECB64                     ,0x00001001   )
DEF2( CKM_SKIPJACK_CBC64                     ,0x00001002   )
DEF2( CKM_SKIPJACK_OFB64                     ,0x00001003   )
DEF2( CKM_SKIPJACK_CFB64                     ,0x00001004   )
DEF2( CKM_SKIPJACK_CFB32                     ,0x00001005   )
DEF2( CKM_SKIPJACK_CFB16                     ,0x00001006   )
DEF2( CKM_SKIPJACK_CFB8                      ,0x00001007   )
DEF2( CKM_SKIPJACK_WRAP                      ,0x00001008   )
DEF2( CKM_SKIPJACK_PRIVATE_WRAP              ,0x00001009   )
DEF2( CKM_SKIPJACK_RELAYX                    ,0x0000100A   )
DEF2( CKM_KEA_KEY_PAIR_GEN                   ,0x00001010   )
DEF2( CKM_KEA_KEY_DERIVE                     ,0x00001011   )
DEF2( CKM_FORTEZZA_TIMESTAMP                 ,0x00001020   )
DEF2( CKM_BATON_KEY_GEN                      ,0x00001030   )
DEF2( CKM_BATON_ECB128                       ,0x00001031   )
DEF2( CKM_BATON_ECB96                        ,0x00001032   )
DEF2( CKM_BATON_CBC128                       ,0x00001033   )
DEF2( CKM_BATON_COUNTER                      ,0x00001034   )
DEF2( CKM_BATON_SHUFFLE                      ,0x00001035   )
DEF2( CKM_BATON_WRAP                         ,0x00001036   )
DEF2( CKM_ECDSA_KEY_PAIR_GEN                 ,0x00001040   )
DEF2( CKM_EC_KEY_PAIR_GEN                    ,0x00001040   )
DEF2( CKM_ECDSA                              ,0x00001041   )
DEF2( CKM_ECDSA_SHA1                         ,0x00001042   )
DEF2( CKM_ECDH1_DERIVE                       ,0x00001050   )
DEF2( CKM_ECDH1_COFACTOR_DERIVE              ,0x00001051   )
DEF2( CKM_ECMQV_DERIVE                       ,0x00001052   )
DEF2( CKM_JUNIPER_KEY_GEN                    ,0x00001060   )
DEF2( CKM_JUNIPER_ECB128                     ,0x00001061   )
DEF2( CKM_JUNIPER_CBC128                     ,0x00001062   )
DEF2( CKM_JUNIPER_COUNTER                    ,0x00001063   )
DEF2( CKM_JUNIPER_SHUFFLE                    ,0x00001064   )
DEF2( CKM_JUNIPER_WRAP                       ,0x00001065   )
DEF2( CKM_FASTHASH                           ,0x00001070   )
DEF2( CKM_AES_KEY_GEN                        ,0x00001080   )
DEF2( CKM_AES_ECB                            ,0x00001081   )
DEF2( CKM_AES_CBC                            ,0x00001082   )
DEF2( CKM_AES_MAC                            ,0x00001083   )
DEF2( CKM_AES_MAC_GENERAL                    ,0x00001084   )
DEF2( CKM_AES_CBC_PAD                        ,0x00001085   )
DEF2( CKM_AES_CTR                            ,0x00001086   )
DEF2( CKM_AES_GCM                            ,0x00001087   )
DEF2( CKM_AES_CCM                            ,0x00001088   )
DEF2( CKM_AES_CTS                            ,0x0000108B   )
DEF2( CKM_BLOWFISH_KEY_GEN                   ,0x00001090   )
DEF2( CKM_BLOWFISH_CBC                       ,0x00001091   )
DEF2( CKM_TWOFISH_KEY_GEN                    ,0x00001092   )
DEF2( CKM_TWOFISH_CBC                        ,0x00001093   )
DEF2( CKM_DES_ECB_ENCRYPT_DATA               ,0x00001100   )
DEF2( CKM_DES_CBC_ENCRYPT_DATA               ,0x00001101   )
DEF2( CKM_DES3_ECB_ENCRYPT_DATA              ,0x00001102   )
DEF2( CKM_DES3_CBC_ENCRYPT_DATA              ,0x00001103   )
DEF2( CKM_AES_ECB_ENCRYPT_DATA               ,0x00001104   )
DEF2( CKM_AES_CBC_ENCRYPT_DATA               ,0x00001105   )
DEF2( CKM_DSA_PARAMETER_GEN                  ,0x00002000   )
DEF2( CKM_DH_PKCS_PARAMETER_GEN              ,0x00002001   )
DEF2( CKM_X9_42_DH_PARAMETER_GEN             ,0x00002002   )
DEF2( CKM_IBM_ATTRIBUTEBOUND_WRAP            ,0x80020004   )
DEF2( CKM_IBM_SM4_KEY_GEN                    ,0x80050001   )
DEF2( CKM_IBM_SM4_CBC                        ,0x80050002   )
DEF2( CKM_IBM_SM4_ECB                        ,0x80050004   )
DEF2( CKM_IBM_SM4_MAC_GENERAL                ,0x80050007   )
DEF2( CKM_IBM_SM4_MAC                        ,0x80058007   )
DEF2( CKM_IBM_ISO2_SM4_MAC_GENERAL           ,0x80050008   )
DEF2( CKM_IBM_ISO2_SM4_MAC                   ,0x80058008   )
DEF2( CKM_IBM_SM4_ECB_ENCRYPT_DATA           ,0x80050009   )
DEF2( CKM_IBM_SM2_KEY_PAIR_GEN               ,0x8005000A   )
DEF2( CKM_IBM_SM2                            ,0x8005000B   )
DEF2( CKM_IBM_SM2_SM3                        ,0x8005000C   )
DEF2( CKM_IBM_SM2_ENCRYPT                    ,0x8005000D   )
DEF2( CKM_IBM_SM3                            ,0x8005000E   )
DEFEND(CKM   )
///////////////////////////////////////////////////////
// r * getPkcsType(char * type, int value)
char * getPkcsType(defs * type, int value)
{
  defs * pDefs;
  pDefs = type;
  char * pName = "Unknown";
  for (;; pDefs ++)
    {
      if (pDefs -> name == 0) break;
      if (pDefs -> value == value)
      {
         pName = pDefs -> name;
         return pName;
      }
    }
  printf("    CKA not found  %8.8xd\n",value);

  return pName;
}
