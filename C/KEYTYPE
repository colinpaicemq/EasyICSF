  /*Include standard libraries */
#define _OPEN_SYS
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <string.h>
#include </usr/include/csfbext.h>
typedef char    char8[8];
#include <printhx.h>  // colin special
#include <csfgetrc.h>  // colin special
#include <exists.h>  // colin special
//nclude <zo64.h>  // colin special
#include <args2.h>  // colin special
#include <exists.h>  // colin special
#include <keytype.h>  // colin special
#include <findkey.h>  // colin special
int main( int argc, char *argv??(??))
{

  char * pKey   = "";
  char * pType  = "";
  int rc = 0;
  rc += readArgs( argc,argv,"-key",0 ,&pKey,"v");
  rc += readArgs( argc,argv,"-type"  ,0 ,&pType ,"v");
  if (rc > 0 )
  {
     printf("Problem with parameters %i\n",rc);
     return 8;
  }
  if ( pKey[0] == 0 ) {rc++;printf("-key ...  is required\n");}

  char * pRecord;
  int lRecord;
  rc = findKey(pType,pKey,&pRecord,&lRecord);
  if ( rc != 0)
  {
     printf("findKey return code %s %i\n",pKey,rc);
     return rc;
  }
  char data[60];
  int  lData = sizeof(data);
  rc = keyType(pRecord,lRecord,&data[0],&lData);
  if (rc != 0)
    printf("return code from keyType %i, length %i\n",rc,lData);
  printf("key %-16s:%s.\n",pKey,data);
  return 0;
}
