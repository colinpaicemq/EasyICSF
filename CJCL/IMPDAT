#ifndef DOIMPDAT_INCLUDE
#define DOIMPDAT_INCLUDE
#include <do64.h>
int importData(char * pUnusedKey, char * pKek,
    char ** pData, int * lData)
{
  //  CSNDSYI
  int rc;
  int rs;
  int zero = 0;
  int i64 = 64;
  int rule_count                 =  3;
  char out[60];
  int  lOut  = sizeof(out );
  rc = keyType(*pData ,* lData,&out[0],&lOut );
  printf("Imported data type %s\n",out );

  do64(KEK ,pKek   );
  char * pRule;
  char8 rule_Data[3] =
                       {"AES     ",
                        "PKCSOAEP",
                        "SHA-256 "};
 //                     "PKCS-1.2"};
  pRule = &rule_Data[0][0];
  int lOutput = 64  ;
  char * pOutput = (char * ) malloc(lOutput);
  if ( pOutput == 0)
  {
    printf("malloc for %i failed in IMPDAT\n",lOutput);
  }
//printf("Key Name %s.\n",pKey);
  printf("ImportData KEK %s.\n",pKek);
  CSNDSYI (
            &rc  ,               /* return code         */
            &rs  ,               /* reason code         */
            &zero,               /* exit data length   0*/
            0,                   /* exit data[]        0*/
            &rule_count,        /* rule array count    ! */
            pRule,              /* rule array[]        ! */

            lData,               /* enciphered token len,  */
          * pData,               /* enciphered token       */

            &i64,                /* RSA pub key id length   */
   (char *) &KEK ,               /* RSA pub key id[]        */

            &lOutput,           /* cca DES token length          */
            pOutput           );  /* cca DES token[64]             */
// if( rc > 0)
   printf("CSNDSYI  rc %i rs %i %s\n",rc,rs,csfgetrc(rs));
 if (rc != 0) return rc;
   printf("ImpDat:CSNDSYI  data lengt %i\n",lOutput);
 // get rid of input buffer
   free (*pData);
   *pData =  pOutput;
   *lData = lOutput;
 return 0;
 }
#endif
