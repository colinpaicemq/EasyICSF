#ifndef KEYAES_INCLUDE
#define KEYAES_INCLUDE
#include <do64.h>
#include <keytype.h>  // colin special
//  CSNBKGN2
// on input it points to a skeleton
// on exit it poitns to the token
// same buffer is used
//  No transport key is used, so it can only support OP
//  To use type IM or EX you need to specify the transport KEY
//
int GENAES2( char * pType,  char * pData, int *  lData)
{
  int rc;
  int rs;
  int l64 = 64;
  int zero = 0;
  char8 C_rule[2]  = {"AES     ","OP      "};
//char8 C_rule[2]  = {"AES     ","IM      "};
  char * pRule;
  char Tout[60];
  int lTout = sizeof(Tout);
  rc = keyType(pData,*lData ,&Tout[0],&lTout);
  printf("KEYAES:input:%s\n",Tout);
  int rule_count                 =  2;
  pRule = &C_rule[0][0];

  int keyLength = 256 ;//  AES 256  - why use any other?

  char *pkeyType1 = "TOKEN   ";
  char *pkeyType2 = "        ";
  do64(KEK,"AESDHE");
  int l725 = 725;
  CSNBKGN2(
          &rc  ,                   /* return code         */
          &rs  ,                   /* reason code         */
          &zero,                   /* exit data length   0*/
          0,                       /* exit data[]        0*/
          &rule_count,             /* rule array count    ! */
          pRule,                   /* rule array[]        ! */
          &keyLength,              /* clear key bit length! */
          pkeyType1   ,            /* key type1[8]        ! */
          pkeyType2   ,            /* key type2[8]        ! */
          &zero,                    /* key name1 length     0*/
          0,                        /* key name1[64]        0*/
          &zero,                    /* key name2 length     0*/
          0,                        /* key name2[64]        0*/
          &zero,                  /* user assoc data1 length 0*/
          0,                      /* user associated data1[] 0*/
          &zero,                  /* user assoc data2 length 0*/
          0,                      /* user associated data2[] 0*/
          &zero,                  /* KEK id1 length          0*/
          0,                      /* KEK id1[]               0*/
//        &l64 ,                  /* KEK id1 length          0*/
// (char*)&KEK ,                  /* KEK id1[]               0*/
          &zero,                  /* KEK id2 length          0*/
          0,                      /* KEK id2[]               0*/
          &l725,                  /* output key id1 length !  */
          pData,                  /* output key id1[]      !   */
          &zero    ,              /* output key id2 length !  */
          0          );           /* output key id2[]      !  */
  if ( rc > 0)
  {
    printf("KEYAES:CSNBKGN2 rc %i rs %i %s\n",rc,rs,csfgetrc(rs));
    return rc;
  }
  *lData = l725;
  return rc;
}
#endif
